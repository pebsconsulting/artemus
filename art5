#!/usr/bin/perl

use Art5;

my $dump = 0;
my $v, $s;
my @path = ();

# raw argument parsing
while ($v = shift(@ARGV)) {
	if ($v eq '-d') {
		$dump  = 1;
	}
	elsif ($v eq '-I') {
		push(@path, shift(@ARGV));
	}
	elsif ($v eq '-l') {
		update_lang();
	}
	else {
		# script name
	}
}

if (!defined($s)) {
	$s = join('', <>);
}

my $a = Art5->new( path => \@path, cache => '/tmp/art5/');

my $c = $a->compile($s);

if ($dump) {
	use Data::Dumper;

	print Dumper($c), "\n";
}
else {
	print $a->exec($c);
}

exit 0;

sub update_lang
# updates all language files
{
	my @lang = glob("lang_*");

	if (scalar(@lang) == 0) {
		print "Error: no lang_* files.\n";
		exit 1;
	}

	# read now all templates in the current directory
	# searching for translateable strings
	my %h = ();

	foreach my $t (glob("*")) {
		# skip language files themselves
		if ($t =~ /lang_.*$/) {
			next;
		}

		# read template
		if (open F, $t) {
			my $l;

			while ($l = <F>) {
				my @s = ($l =~ /@\"([^\"]+)"/g);

				foreach my $s (@s) {
					$h{$s}++;
				}
			}

			close F;
		}
	}

	my $a = Art5->new( path => ['.']);

	# now all keys in the templates must be
	# merged into each language file
	# ...

	foreach my $l (@lang) {
		print "Rebulding $l...\n";

		# load and execute this template file
		my $c = $a->code($l);
		$a->exec($c);

		open F, ">$l";

		print F "<{T\n";
		foreach my $k (sort keys(%h)) {
			print F "\"$k\" \n";
			print F "\"", ($a->{t}->{$k} || ''), "\"\n\n";
		}
		print F "}>\n";

		close F;
	}

	exit 0;
}
